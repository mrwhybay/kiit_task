@model KitXIXTask.Models.Viewmodels.SearchViewModel
@using System.Linq

@using (Html.BeginForm("Search", "Product", FormMethod.Get, new { @class = "row g-3" }))
{
    <div class="col-md-6">
        <label for="ProductName" class="form-label">Product Name:</label>
        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control" })
    </div>

    <div class="col-md-6">
        <label for="Size" class="form-label">Size:</label>
        @Html.TextBoxFor(model => model.Size, new { @class = "form-control" })
    </div>

    <div class="col-md-6">
        <label for="Price" class="form-label">Price:</label>
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
    </div>

    <div class="col-md-6">
        <label for="MfgDate" class="form-label">Manufacturing Date:</label>
        @Html.TextBoxFor(model => model.MfgDate, new { @class = "form-control", type = "date" })
    </div>

    <div class="col-md-6">
        <label for="Category" class="form-label">Category:</label>
        @Html.TextBoxFor(model => model.Category, new { @class = "form-control" })
    </div>

    <div class="col-md-6">
        <label for="Condition" class="form-label">Conjunction:</label>
        @Html.DropDownListFor(model => model.Condition, new List<SelectListItem>
        {
            new SelectListItem { Text = "AND", Value = "AND" },
            new SelectListItem { Text = "OR", Value = "OR" }
        }, new { @class = "form-select" })
    </div>

    <div class="col-12">
        <button type="submit" class="btn btn-primary">Search</button>
        <a href="/Product/"  class="btn btn-secondary">Reset</a>
    </div>
}



@if (Model.SearchResults != null && Model.SearchResults.Any())
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.ProductName)</th>
                <th>@Html.DisplayNameFor(model => model.Size)</th>
                <th>@Html.DisplayNameFor(model => model.Price)</th>
                <th>@Html.DisplayNameFor(model => model.MfgDate)</th>
                <th>@Html.DisplayNameFor(model => model.Category)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.SearchResults)
            {
                <tr>

                    <td>@product.ProductName</td>
                    <td>@product.Size</td>
                    <td>@product.Price</td>
                    <td>@product.MfgDate</td>
                    <td>@product.Category</td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No results found.</p>
}
